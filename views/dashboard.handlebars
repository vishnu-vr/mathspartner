<div class="row">
  <div class="col-sm">
    <h1 class="mt-4 text-center">{{ heading }}</h1>
    <h2 class="text-right"><button type="button" class="btn btn-danger" onclick="logout()">Logout</button></h2>
    <hr>
    <nav id="nav" class="nav nav-pills flex-column flex-sm-row mt-5">
        <button id="add_quiz" type="button" class="flex-sm-fill text-sm-center btn btn-dark" onclick="add_quiz()">Add Quiz</button>
        <button id="edit_quiz" type="button" class="flex-sm-fill text-sm-center btn btn-dark" onclick="edit_quiz()">Edit Quiz</button>
        <button id="add_youtube_links" type="button" class="flex-sm-fill text-sm-center btn btn-dark" onclick="add_youtube_links()">Add YouTube Videos</button>
        <button id="change_names" type="button" class="flex-sm-fill text-sm-center btn btn-dark" onclick="change_names()">Change Names</button>
        {{!-- <a id="about" class="flex-sm-fill text-sm-center nav-link" href="/about">About</a> --}}
        {{!-- <a class="flex-sm-fill text-sm-center nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a> --}}
    </nav>
    <h3 id='greeting' class="mt-4 text-center">Welcome Madhu</h3>
    <h3 id="selected_option" class="mt-4 text-center"></h3>
        {{!-- add or edit quiz begins here --}}
        <div id="add_quiz_controls" style="display:none;" class="container ml-2 mt-4">
        <div class="row mt-4">
            <div class="col-sm">
            
            </div>
            <div class="col-md-">
            {{!-- topic name --}}
            <div class="input-group input-group-sm mb-3">
            <div class="input-group-prepend">
                <button id="topic_name_btn" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Topic Name</button>
                <div class="dropdown-menu">
                    <div class="new_option">
                        <p class="dropdown-item" onclick="topic_name_selected('new')">New ?</p>
                        <div role="separator" class="dropdown-divider"></div>
                    </div>
                    <div id="already_existing_topics">
                    <p class="dropdown-item" onclick="topic_name_selected('ratio')">Ratio</p>
                    <p class="dropdown-item" onclick="topic_name_selected('another action')">Another action</p>
                    <p class="dropdown-item" onclick="topic_name_selected('something else')">Something else here</p>
                    </div>
                </div>
            </div>
            <input id="topic_name" type="text" class="form-control" aria-label="Text input with dropdown button">
            </div>
            {{!-- part number input box --}}

            {{!-- part number dropdown select --}}
            <div id='part_number_dropdown'>
                <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <button id="part_number_btn" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Part Number</button>
                    <div class="dropdown-menu">
                        <div class="new_option">
                            <p class="dropdown-item" onclick="part_number_selected('new')">New ?</p>
                            <div role="separator" class="dropdown-divider"></div>
                        </div>
                        <div id="already_existing_parts">

                        </div>
                    </div>
                </div>
                <input id="part_number_input" type="number" class="form-control" aria-label="Text input with dropdown button" readonly>
                </div>
            </div>
            

            {{!-- question paper --}}
            <div class="dropdown show">
            <a id="question_paper_dropdown" class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                question paper
            </a>

            <div id="permissible_question_papers" class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                <a class="dropdown-item" onclick="question_paper('question_paper_1')">question_paper_1</a>
                <a class="dropdown-item" onclick="question_paper('question_paper_2')">question_paper_2</a>
                <a class="dropdown-item" onclick="question_paper('question_paper_3')">question_paper_3</a>
                <a class="dropdown-item" onclick="question_paper('question_paper_4')">question_paper_4</a>
                <a class="dropdown-item" onclick="question_paper('question_paper_5')">question_paper_5</a>
                <a class="dropdown-item" onclick="question_paper('question_paper_6')">question_paper_6</a>
            </div>
            </div>
            {{!-- duration input box --}}
            <div id='duration' class="mt-4">
                <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="inputGroup-sizing-sm">Duration</span>
                </div>
                <input id="duration_input" type="number" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">
                </div>
            </div>
            {{!-- upload pdf explaination --}}
            <div id='pdf_explaination' class="mt-4">
                <h6>Upload Explaination</h6>
                <input type="file" id='inpFile' />
                <div id='pdf_explaination_path'></div>
            </div>
            {{!-- turn on_off switch --}}
            <div class="custom-control custom-switch mt-4">
                <input type="checkbox" class="custom-control-input" id="on_off_switch" checked>
                <label class="custom-control-label" for="on_off_switch">On / Off</label>
            </div>
            {{!-- questions and options --}}
            <div id="questions_and_options">

            </div>
            {{!-- add more question button 'plus btn' --}}
            <button id="add_more_questions_btn" type="button" class="btn btn-dark mt-4" onclick="add_more_questions()">
                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-plus-circle" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z"/>
                    <path fill-rule="evenodd" d="M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z"/>
                    <path fill-rule="evenodd" d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                </svg>
            </button>
            {{!-- submit button --}}
            <br>
            <button id="final_submit" type="button" class="btn btn-primary mt-4" onclick="final_submit()">Submit</button>
            <button id='delete_the_whole_quiz' type="button" class="btn btn-secondary mt-4" onclick="delete_the_whole_quiz()">Delete Quiz</button>
            <br>
            <button id='delete_part_of_quiz' type="button" class="btn btn-warning mt-4" onclick="delete_part_of_quiz()" hidden>Delete Part</button>
            <br>
            <button id='delete_topic' type="button" class="btn btn-danger mt-4" onclick="delete_topic()" hidden>Delete Topic</button>
            {{!-- <div class="input-group input-group-lg">
            <div class="input-group-prepend">
                <span class="input-group-text" id="inputGroup-sizing-lg">Large</span>
            </div>
            <input type="text" class="form-control" aria-label="Large" aria-describedby="inputGroup-sizing-sm">
            </div> --}}

            </div>
            <div class="col-sm">
            
            </div>
        </div>
        </div>
    {{!-- YoutTube Controls --}}
    <div id='youtube_controls' class="container ml-2 mt-4" hidden>
        <div class="row mt-4">
            {{!-- first column --}}
            <div class="col-sm">
            </div>
            {{!-- second column --}}
            <div class="col-sm">
                {{!-- topic name --}}
                <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <button id="yt_topic_name_btn" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Topic Name</button>
                    <div class="dropdown-menu">
                        <div class="yt_new_option">
                            <p class="dropdown-item" onclick="yt_topic_name_selected('new')">New ?</p>
                            <div role="separator" class="dropdown-divider"></div>
                        </div>
                        <div id="yt_already_existing_topics">
                        <p class="dropdown-item" onclick="yt_topic_name_selected('ratio')">Ratio</p>
                        <p class="dropdown-item" onclick="yt_topic_name_selected('another action')">Another action</p>
                        <p class="dropdown-item" onclick="yt_topic_name_selected('something else')">Something else here</p>
                        </div>
                    </div>
                </div>
                <input id="yt_topic_name" type="text" class="form-control" aria-label="Text input with dropdown button" readonly>
                </div>

                {{!-- part number dropdown select --}}
                <div id='yt_part_number_dropdown'>
                    <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <button id="yt_part_number_btn" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Part Number</button>
                        <div class="dropdown-menu">
                            <div class="yt_new_option">
                                <p class="dropdown-item" onclick="yt_part_number_selected('new')">New ?</p>
                                <div role="separator" class="dropdown-divider"></div>
                            </div>
                            <div id="yt_already_existing_parts">

                            </div>
                        </div>
                    </div>
                    <input id="yt_part_number_input" type="number" class="form-control" aria-label="Text input with dropdown button" readonly>
                    </div>
                    {{!-- input box for yt link --}}
                    <input id="yt_link_input" type="text" class="form-control" readonly>
                    {{!-- youtube player --}}
                    <div id="yt_player" hidden>
                        <div class="embed-responsive embed-responsive-16by9 mt-4">
                            <iframe id='iframe' src="" class="embed-responsive-item" allowfullscreen></iframe>
                        </div>
                    </div>
                    <button id="yt_submit" type="button" class="btn btn-primary mt-4" onclick="yt_submit()">Submit</button>
                    <button id="yt_delete" type="button" class="btn btn-danger mt-4" onclick="yt_delete()">Delete</button>
                </div>
            </div>
            {{!-- third column --}}
            <div class="col-sm">
            </div>
        </div>
    </div>

    {{!-- Change Names Controls --}}
    <div id='change_name_controls' class="container ml-2 mt-4" hidden>
        <div class="row mt-4">
            {{!-- first column --}}
            <div class="col-sm">
            </div>
            {{!-- second column --}}
            <div class="col-sm">
                {{!-- topic name --}}
                <div class="input-group input-group-sm mb-3">
                <div class="input-group-prepend">
                    <button id="cn_topic_name_btn" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Topic Name</button>
                    <div class="dropdown-menu">
                        <div id="cn_already_existing_topics">
                        <p class="dropdown-item" onclick="cn_topic_name_selected('ratio')">Ratio</p>
                        <p class="dropdown-item" onclick="cn_topic_name_selected('another action')">Another action</p>
                        <p class="dropdown-item" onclick="cn_topic_name_selected('something else')">Something else here</p>
                        </div>
                    </div>
                </div>
                <input id="cn_topic_name" type="text" class="form-control" aria-label="Text input with dropdown button" readonly>
                </div>
                {{!-- new topic name --}}
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1">New Topic Name</span>
                    </div>
                    <input id="cn_new_topic_name" type="text" class="form-control" aria-describedby="basic-addon1">
                </div>
                
                {{!-- part number dropdown select --}}
                <div id='cn_part_number_dropdown'>
                    <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <button id="cn_part_number_btn" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Part Number</button>
                        <div class="dropdown-menu">
                            <div id="cn_already_existing_parts">

                            </div>
                        </div>
                    </div>
                    <input id="cn_part_number_input" type="number" class="form-control" aria-label="Text input with dropdown button" readonly>
                    </div>
                </div>
                {{!-- new part number --}}
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1">New Part Number</span>
                    </div>
                    <input id="cn_new_part_number" type="number" class="form-control" aria-describedby="basic-addon1">
                </div>

                {{!-- question paper --}}
                <div class="dropdown show">
                <a id="cn_current_question_papers_btn" class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    question paper
                </a>

                <div id="cn_current_question_papers" class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_1','current')">question_paper_1</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_2','current')">question_paper_2</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_3','current')">question_paper_3</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_4','current')">question_paper_4</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_5','current')">question_paper_5</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_6','current')">question_paper_6</a>
                </div>
                </div>

                {{!-- new question paper --}}
                <div class="dropdown show mt-3">
                <a id="cn_new_question_papers_btn" class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    new question paper
                </a>

                <div id="cn_new_permissible_question_papers" class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_1','new')">question_paper_1</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_2','new')">question_paper_2</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_3','new')">question_paper_3</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_4','new')">question_paper_4</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_5','new')">question_paper_5</a>
                    <a class="dropdown-item" onclick="cn_question_paper('question_paper_6','new')">question_paper_6</a>
                </div>
                </div>

                <button id="cn_submit_btn" type="button" class="btn btn-primary mt-4" onclick="cn_submit()">Submit</button>
                <hr>

                {{!-- YouTube Change Names --}}
                <h3 style="text-align: center;">YouTube</h3>
                {{!-- topic name --}}
                <div class="input-group input-group-sm mb-3 mt-4">
                <div class="input-group-prepend">
                    <button id="cn_yt_topic_name_btn" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Topic Name</button>
                    <div class="dropdown-menu">
                        <div id="cn_yt_already_existing_topics">
                        <p class="dropdown-item" onclick="cn_yt_topic_name_selected('ratio')">Ratio</p>
                        <p class="dropdown-item" onclick="cn_yt_topic_name_selected('another action')">Another action</p>
                        <p class="dropdown-item" onclick="cn_yt_topic_name_selected('something else')">Something else here</p>
                        </div>
                    </div>
                </div>
                <input id="cn_yt_topic_name" type="text" class="form-control" aria-label="Text input with dropdown button" readonly>
                </div>
                {{!-- new topic name --}}
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1">New Topic Name</span>
                    </div>
                    <input id="cn_yt_new_topic_name" type="text" class="form-control" aria-describedby="basic-addon1">
                </div>
                
                {{!-- part number dropdown select --}}
                <div id='cn_yt_part_number_dropdown'>
                    <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <button id="cn_yt_part_number_btn" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Part Number</button>
                        <div class="dropdown-menu">
                            <div id="cn_yt_already_existing_parts">

                            </div>
                        </div>
                    </div>
                    <input id="cn_yt_part_number_input" type="number" class="form-control" aria-label="Text input with dropdown button" readonly>
                    </div>
                </div>
                {{!-- new part number --}}
                <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1">New Part Number</span>
                    </div>
                    <input id="cn_yt_new_part_number" type="number" class="form-control" aria-describedby="basic-addon1">
                </div>
                <button id="cn_yt_submit_btn" type="button" class="btn btn-primary mt-2" onclick="cn_yt_submit()">Submit</button>
            </div>
            {{!-- third column --}}
            <div class="col-sm">
            </div>
        </div>
    </div>

  </div>
</div>

{{!-- modal for showing 'loading' --}}
<!-- Button trigger modal -->
{{!-- document.getElementById('loading').click() --}}
<button id='loading' type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" hidden>
  Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Please Wait...</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
<div class="text-center">
  <div class="spinner-border" role="status">
    <span class="sr-only">Loading...</span>
  </div>
</div>
      </div>
      <div class="modal-footer">
        <button id='close_btn_spinner' type="button" class="btn btn-secondary" data-dismiss="modal" hidden>Close</button>
        <button type="button" class="btn btn-primary" hidden>Save changes</button>
      </div>
    </div>
  </div>
</div>

<script>
    const greeting = document.getElementById('greeting')

    function logout (){
        window.location.replace("/logout")
    }

    function delete_topic() {
        var topic_name = document.getElementById('topic_name_btn').innerHTML
        if (topic_name == 'Topic Name') {
            alert('select a quiz first')
            return
        }
        postData('/delete_topic', { 'topic_name':topic_name})
        .then(data => {
            console.log(data); // JSON data parsed by `data.json()` call
            if (data == 'success') alert('deleted')
        });
    }

    function delete_part_of_quiz() {
        var topic_name = document.getElementById('topic_name_btn').innerHTML
        var part_number = document.getElementById('part_number_btn').innerHTML
        if (topic_name == 'Topic Name') {
            alert('select a quiz first')
            return
        }
        if (part_number == 'Part Number') {
            alert('select the part')
            return
        }
        postData('/delete_part_of_quiz', { 'topic_name':topic_name, 'part_number':part_number})
        .then(data => {
            console.log(data); // JSON data parsed by `data.json()` call
            if (data == 'success') alert('deleted')
        });
    }

    function delete_the_whole_quiz() {
        var topic_name = document.getElementById('topic_name_btn').innerHTML
        var part_number = document.getElementById('part_number_btn').innerHTML
        var question_paper_dropdown = document.getElementById('question_paper_dropdown').innerHTML
        if (topic_name == 'Topic Name') {
            alert('select a quiz first')
            return
        }
        if (part_number == 'Part Number') {
            alert('select the part')
            return
        }
        if (question_paper_dropdown == 'question paper ') {
            alert('select the question paper')
            return
        }
        // alert(topic_name)
        // return
        postData('/delete_the_whole_quiz', { 'topic_name':topic_name, 
        'question_paper':question_paper_dropdown, 
        'part_number':part_number})
        .then(data => {
            console.log(data); // JSON data parsed by `data.json()` call
            if (data == 'success') {
                alert('deleted')
                location.reload();
                // edit_quiz()
            }
        });
    }

    function delete_question(question_num) {
        console.log(question_num)
        document.getElementById(question_num).innerHTML = ''
        // console.log(document.getElementsByClassName(question_num))
    }

    // adding the topics_in_db to dropdown list
    //<p class="dropdown-item" onclick="topic_name_selected('ratio')">Ratio</p>
    const already_existing_topics = document.getElementById('already_existing_topics')
    already_existing_topics.innerHTML = ''
    const topics_in_db = {{{json topics_in_db}}}
    for (var i=0; i<topics_in_db.length; i++){
        var t = document.createElement('p')
        t.className = 'dropdown-item'
        t.setAttribute('onclick',"topic_name_selected('"+topics_in_db[i]+"')") 
        t.innerHTML = topics_in_db[i]
        already_existing_topics.appendChild(t)
    }

    // youtube section
    const yt_already_existing_topics = document.getElementById('yt_already_existing_topics')
    yt_already_existing_topics.innerHTML = ''
    const yt_topics = {{{json yt_topics}}}
    for (var i=0; i<yt_topics.length; i++){
        var t = document.createElement('p')
        t.className = 'dropdown-item'
        t.setAttribute('onclick',"yt_topic_name_selected('"+yt_topics[i]+"')") 
        t.innerHTML = yt_topics[i]
        yt_already_existing_topics.appendChild(t)
    }

    // change names section
    const cn_already_existing_topics = document.getElementById('cn_already_existing_topics')
    cn_already_existing_topics.innerHTML = ''
    // const topics_in_db = {{{json topics_in_db}}}
    for (var i=0; i<topics_in_db.length; i++){
        var t = document.createElement('p')
        t.className = 'dropdown-item'
        t.setAttribute('onclick',"cn_topic_name_selected('"+topics_in_db[i]+"')") 
        t.innerHTML = topics_in_db[i]
        cn_already_existing_topics.appendChild(t)
    }    

    // youtube change names section
    const cn_yt_already_existing_topics = document.getElementById('cn_yt_already_existing_topics')
    cn_yt_already_existing_topics.innerHTML = ''
    // const yt_topics = {{{json yt_topics}}}
    for (var i=0; i<yt_topics.length; i++){
        var t = document.createElement('p')
        t.className = 'dropdown-item'
        t.setAttribute('onclick',"cn_yt_topic_name_selected('"+yt_topics[i]+"')") 
        t.innerHTML = yt_topics[i]
        cn_yt_already_existing_topics.appendChild(t)
    } 

    // final submission for both editing or adding quiz
    function final_submit() {

        // the list of objects which will be sent to the back-end
        var questions_and_options_dic = []

        // console.log("hey")
        // topic name
        var topic_name = document.getElementById('topic_name')
        if (topic_name.value == '') {
            alert("topic name is missing")
            return
        }
        else console.log(topic_name.value)
        // part number
        var part_number_input = document.getElementById('part_number_input')
        if (part_number_input.value == '') {
            alert("part number is missing")
            return
        }
        else console.log(part_number_input.value)
        // question paper
        var question_paper_dropdown = document.getElementById('question_paper_dropdown')
        if (question_paper_dropdown.innerText == 'question paper ') {
            alert('choose a question paper')
            return
        }
        else console.log(question_paper_dropdown.innerHTML)
        // duration check
        var duration_input = document.getElementById('duration_input')
        if (duration_input.value == '') {
            alert('Duration of the quiz is missing')
            return
        }
        // checking whether user has entered some questions
        if (question_count == 0) {
            alert('add some questions first')
            return
        }
        else{
            // count the total number of skipped questions
            // if its equal to the number of questions
            // then don't send data to back-end
            var skipped_question_count = 0
            for (var i=1; i<=question_count; i++){
                // alert("here")
                var question_ = 'question_' + i
                var question = document.getElementById(question_)

                // if any question has been deleted then
                // skip it and increment the skip count
                if (question.innerHTML == '') {
                    // alert("skipped")
                    skipped_question_count++
                    continue
                }


                // remove
                //alert(question.children[0].children[2].value)
                // alert(question.children[1].children[1].value)
                // alert(question.children[2].children[1].value)
                // alert(question.children[3].children[1].value)
                // alert(question.children[4].children[1].value)
                // radio .children[1].children[0]
                // return

                // question boxes validation
                if (question.children[0].children[2].value == '') {
                    alert('question '+i+' is missing')
                    return
                }

                // options validation
                // var correct_option_check = 0
                var options_list = []
                for (var j=1; j<=4; j++){
                    if (question.children[j].children[1].value == ''){
                        alert('option '+j+' for question '+i+' is missing')
                        return
                    }
                    // if option present
                    options_list.push(question.children[j].children[1].value)
                }
                // check for the correct choice radio check
                var radio_for_correct_answer = 'radio_' + i
                var radio_selected = document.getElementsByName(radio_for_correct_answer)
                var user_checked_radio = false
                var correct_choice = null
                for (var k=0; k<4; k++){
                    if (radio_selected[k].checked) {
                        user_checked_radio = true
                        correct_choice = question.children[k+1].children[1].value
                        console.log(correct_choice)
                    }
                }
                console.log(user_checked_radio)
                if (!user_checked_radio){
                    alert("choose a correct option for question "+i)
                    // alert("just before function return")
                    return
                }
                // alert("outside the if")
                // if questions, answers and correct option are all validated
                // cross checking whether the new entered name or part number is present in
                // the db or not (can't fully trust the user)
                if (!topic_name_exists){
                    if (topics_in_db.includes(topic_name.value)) {
                        // topic_name_exists = true
                        alert("You choose new topic name, but this quiz alreay exists")
                        return
                    }
                }
                if (!part_number_exists){
                    // alert(part_number_input.value.toString())
                    if (already_existing_parts_from_db.includes(part_number_input.value.toString())){
                        // part_number_exists = true
                        alert("You choose new part number, but this quiz alreay exists")
                        return
                    }
                }
                
                var dic_to_send = {'topic_name':topic_name.value,
                'part_number':part_number_input.value.toString(),
                'question_paper':question_paper_dropdown.innerHTML,
                'question':question.children[0].children[2].value,
                'options':options_list,
                'correct':correct_choice,
                'duration':duration_input.value,
                'topic_name_exists':topic_name_exists,
                'part_number_exists':part_number_exists}

                questions_and_options_dic.push(dic_to_send)

                console.log(questions_and_options_dic)
                // return

            }
        }

        // check if atleast one question remains
        // after pressing the delete button
        if (skipped_question_count >= question_count) {
            alert("add some questions first")
            return
        }

        // adding a null value
        // the path will be updated later
        questions_and_options_dic[0]['pdf_path'] = ''

        // the on/off toggle status
        const on_off_switch = document.getElementById('on_off_switch')
        questions_and_options_dic[0]['on_off'] = on_off_switch.checked

        // if everything went well
        // sending data to back-end
        if (editing_mode) var url = '/edit_quiz'
        else var url = '/add_quiz'

        postData(url, questions_and_options_dic)
        .then(data => {
            console.log(data); // JSON data parsed by `data.json()` call
            // after thats done we if there is a pdf uploaded we send
            // it to the back-end
            // <input type="file" id='inpFile' />
            const inpFile = document.getElementById('inpFile')
            const endpoint = '/fileupload'
            const formData = new FormData()
            var filename = questions_and_options_dic[0].topic_name + '#' + 'part_' + questions_and_options_dic[0].part_number + '#' + questions_and_options_dic[0].question_paper
            // if pdf file exists
            if (inpFile.files[0]) {
                // loading spinner
                document.getElementById('loading').click()

                formData.append('inpFile',inpFile.files[0],filename)
                
                fetch(endpoint,{
                    method:"post",
                    body:formData
                }).then((data) => {
                    console.log(data)
                    location.reload();
                    // add_quiz()
                })
            }
            else {
                console.log("pdf file is missing")
                location.reload();
                // add_quiz()
            }

            // if everything went fine refresh the page
            // location.reload();
        });
    }

    // for showing the selected part number on the button
    var part_number_exists = false
    function part_number_selected(part) {
        // if in editing mode show the part number as button label
        if (editing_mode){
            document.getElementById('pdf_explaination_path').innerHTML = ''
            // if the user selects another topic name then
            // delete all the fetched questions
            document.getElementById('questions_and_options').innerHTML = ''

            // if in editing then the part number always exists
            part_number_exists = true

            const btn = document.getElementById('part_number_btn')
            btn.innerHTML = part
        }
        // else show it in the input box
        else{
            // resetting the diff level label to default
            document.getElementById('question_paper_dropdown').innerHTML = 'question paper '

            // const part_number_input = document.getElementById('part_number_input')
            if (part != 'new') {
                // if its not new then lock the input
                part_number_input.readOnly = true

                // part_number_input.value = parseInt(part)
                part_number_exists = true
            }
            // if new is selected then clear the space if anything present
            if (part == 'new') {
                // if its new then unlock the input
                part_number_input.readOnly = false

                part_number_exists = false
                part_number_input.value = ''
                const permissible_question_papers = document.getElementById('permissible_question_papers')
                permissible_question_papers.innerHTML = ''
                // resetting the diff levels options to default when new part
                // is selected
                // <a class="dropdown-item" onclick="question_paper('question_paper_2')">question_paper_2</a>
                var levels = ['question_paper_1','question_paper_2','question_paper_3','question_paper_4','question_paper_5','question_paper_6']
                for (var i=0; i<levels.length; i++){
                    var a= document.createElement('a')
                    a.className = 'dropdown-item'
                    a.setAttribute('onclick','question_paper("'+levels[i]+'")')
                    a.innerHTML = levels[i]
                    permissible_question_papers.appendChild(a)
                }
            }
        }

        // if part number is not new then fetch its diff leves
        if ( part != 'new'){
            const part_number_input = document.getElementById('part_number_input')
            part_number_input.value = parseInt(part)

            // fetch question_paper of that part
            var topic_name = document.getElementById('topic_name')
            if (!topics_in_db.includes(topic_name.value)) return

            // if edit mode or add mode
            if (editing_mode) var url = '/get_question_paper/edit'
            else var url = '/get_question_paper/add'
            postData(url, {"part_number":'part_'+part,"topic_name":topic_name.value})
            .then(data => {
                console.log("here"+data); // JSON data parsed by `data.json()` call
                const permissible_question_papers = document.getElementById('permissible_question_papers')
                if (data == null) {
                    permissible_question_papers.innerHTML = ''
                    alert("You have already added all question papers for this configuration")
                }
                else{
                    // <a class="dropdown-item" onclick="question_paper('question_paper_1')">question_paper_1</a>
                    permissible_question_papers.innerHTML = ''
                    for (var i=0; i<data.length; i++){
                        var a = document.createElement('a')
                        a.className = 'dropdown-item'
                        a.setAttribute('onclick','question_paper("'+data[i]+'")')
                        a.innerHTML = data[i]
                        permissible_question_papers.appendChild(a)
                    }
                }
            });
        }
    }

    // to add more question
    const questions_and_options = document.getElementById('questions_and_options')
    var question_count = 0
    function add_more_questions(){
        console.log("clicked me")
        question_count++
        // question and options body
        const question = document.createElement('div')
        question.id = 'question_' + question_count
        // question wrapper div
        const question_wrapper = document.createElement('div')
        question_wrapper.className = 'form-group mt-4'
        // label for question
        const question_label = document.createElement('label')
        question_label.setAttribute('for','exampleFormControlTextarea1')
        question_label.innerHTML = 'Question ' + question_count
        // question text area
        const question_textarea = document.createElement('textarea')
        question_textarea.className = 'form-control mt-2'
        question_textarea.id = 'exampleFormControlTextarea1'
        question_textarea.setAttribute('rows','3')
        // appending label and text area
        question_wrapper.appendChild(question_label)
        // appending delete button
        // <button type="button" class="btn btn-danger">Danger</button>
        var delete_btn = document.createElement('button')
        delete_btn.className = 'btn btn-danger ml-2'
        delete_btn.type = 'button'
        delete_btn.innerHTML = 'Delete'
        delete_btn.setAttribute('onclick','delete_question("'+'question_' + question_count+'")')
        question_wrapper.appendChild(delete_btn)
        question_wrapper.appendChild(question_textarea)
        // appending question_wrapper to main question div
        question.appendChild(question_wrapper)

        for (var i=0; i<4; i++){
            // options
            // main option div
            const input_group = document.createElement('div') //input-group
            input_group.className = 'input-group'
            const input_group_prepend = document.createElement('div')
            input_group_prepend.className = 'input-group-prepend'
            const input_group_text = document.createElement('input-group-text')
            input_group_text.className = 'input-group-text'
            const question_radio = document.createElement('input')
            question_radio.type = 'radio'
            question_radio.name = 'radio_' + question_count
            question_radio.setAttribute('aria-label','aria-label="Radio button for following text input"')
            input_group_text.appendChild(question_radio)
            input_group_prepend.appendChild(input_group_text)
            input_group.appendChild(input_group_prepend)
            const text_input_with_radio = document.createElement('input')
            text_input_with_radio.type = 'text'
            text_input_with_radio.className = 'form-control'
            text_input_with_radio.setAttribute('aria-label','Text input with radio button')
            input_group.appendChild(text_input_with_radio)

            // appending options to main questio div
            question.appendChild(input_group)
        }
        // appending everything to the screen
        questions_and_options.appendChild(question)
    }

    function display_fetched_questions(data) {
        // enabling add more questions button
        document.getElementById('add_more_questions_btn').hidden = false

        // reset the question count
        question_count = 0

        // display on_off status
        const on_off_switch = document.getElementById('on_off_switch')
        if (data[0].on_off  == 'true') on_off_switch.checked = true
        else on_off_switch.checked = false

        // display the pdf_explaination file
        var pdf_explaination = document.getElementById('pdf_explaination_path')
        // if pdf_path available
        if (data[0].pdf_path != null && data[0].pdf_path != ""){
            // to download complete explaination
            var pdf_viewer = document.createElement('a')
            pdf_viewer.href = data[0].pdf_path //'/pdf_uploads/test.pdf'
            pdf_viewer.download = "solutions"
            pdf_viewer.innerHTML = 'Download Complete Solution'
            pdf_explaination.appendChild(pdf_viewer)
        }

        // enable duration
        var duration = document.getElementById('duration')
        duration.hidden = false
        document.getElementById('duration_input').value = (data[0].duration)/60
        
        for (var i=0; i<data.length; i++){     

            // insert a holder for the quiz
            add_more_questions()
            // insert content into the holders



            var question_ = 'question_' + (i+1)
            console.log(question)
            var question = document.getElementById(question_)
            
            // remove
            //alert(question.children[0].children[2].value)
            // alert(question.children[1].children[1].value)
            // alert(question.children[2].children[1].value)
            // alert(question.children[3].children[1].value)
            // alert(question.children[4].children[1].value)
            // radio .children[1].children[0]
            // return

            // add question
            question.children[0].children[2].value = data[i].question

            // adding options
            question.children[1].children[1].value = data[i].option_1
            question.children[2].children[1].value = data[i].option_2
            question.children[3].children[1].value = data[i].option_3
            question.children[4].children[1].value = data[i].option_4

            // check the correct radio
            var radio_for_correct_answer = 'radio_' + (i+1)
            var radio_selected = document.getElementsByName(radio_for_correct_answer)
            // var user_checked_radio = false
            // var correct_choice = null
            for (var k=0; k<4; k++){
                // console.log(question.children[k+1].children[1].value)
                if (question.children[k+1].children[1].value == data[i].correct) {
                    radio_selected[k].checked = true
                }
            }
        }
    }

    function question_paper(level) {
        // if the user selects another topic name then
        // delete all the fetched questions
        if(editing_mode) document.getElementById('questions_and_options').innerHTML = ''

        var question_paper_dropdown = document.getElementById('question_paper_dropdown')
        question_paper_dropdown.innerHTML = level

        // if editing mode then retrieve all the questions
        // and options from the database
        if (editing_mode) {
            document.getElementById('pdf_explaination_path').innerHTML = ''
            const topic_name = document.getElementById('topic_name_btn').innerHTML
            const part_number = document.getElementById('part_number_btn').innerHTML
            const question_paper = document.getElementById('question_paper_dropdown').innerHTML
            const quiz_name = topic_name+"part_"+part_number+question_paper
            const table_for_duration = topic_name+"part_"+part_number
            // alert("here"+quiz_name)

            postData('/get_quiz', { 'topic_name':topic_name,
            'part_number':"part_"+part_number,
            'question_paper':question_paper})
            .then(data => {
                console.log(data); // JSON data parsed by `data.json()` call
                display_fetched_questions(data)                
            });
        }
    }

    // to highlight the topic name selected
    var already_existing_parts_from_db = []
    var topic_name_exists = false
    function topic_name_selected(selected_topic_name){
        // if topic name is selected then lock the
        // part_number_input as default.
        // it will be unlocked if a new part number
        // has to be added
        document.getElementById('part_number_input').readOnly = true

        // if the user selects another topic name then
        // delete all the fetched questions
        // if(editing_mode) document.getElementById('questions_and_options').innerHTML = ''

        // if topic name selected reset everything below it
        document.getElementById('part_number_input').value = ''
        document.getElementById('permissible_question_papers').innerHTML = ''
        document.getElementById('question_paper_dropdown').innerHTML = 'question paper '
        // if (editing_mode) document.getElementById('part_number_btn').innerHTML = 'Part Number'

        // inserting the selected topic name as the button label
        // this feature is availble on when its edit mode
        if (editing_mode) {
            document.getElementById('pdf_explaination_path').innerHTML = ''
            document.getElementById('part_number_btn').innerHTML = 'Part Number'
            document.getElementById('questions_and_options').innerHTML = ''
            const topic_name_btn = document.getElementById('topic_name_btn')
            topic_name_btn.innerHTML = selected_topic_name
        }
        // console.log(selected_topic_name)
        const topic_name_input = document.getElementById('topic_name')
        // if topic is not new then fetch its parts
        if (selected_topic_name != 'new') {
            topic_name_input.value = selected_topic_name
            topic_name_exists = true
            
            // lock the input box
            topic_name_input.readOnly = true

            // fetching parts available to the quiz
            postData('/parts_from_db', {selected_topic_name:selected_topic_name})
            .then(data => {
                console.log(data); // JSON data parsed by `data.json()` call
                already_existing_parts_from_db = data
                // <p class="dropdown-item" onclick="part_number_selected('part_1')">part_1</p>
                const already_existing_parts = document.getElementById('already_existing_parts')
                already_existing_parts.innerHTML = ''
                for (var i=0; i<data.length; i++){
                    var p = document.createElement('p')
                    p.className = 'dropdown-item'
                    p.setAttribute('onclick','part_number_selected("'+data[i]+'")')
                    p.innerHTML = data[i]
                    already_existing_parts.appendChild(p)
                }
            });
        }
        // if new selected
        if (selected_topic_name == 'new') {
            // unlock the input box
            topic_name_input.readOnly = false

            // emptying the parts fetched from db
            already_existing_parts_from_db = []
            topic_name_exists = false
            part_number_exists = false
            // resetting the input field 
            document.getElementById('topic_name').value = ''
            // resetting the part field 
            document.getElementById('already_existing_parts').innerHTML = ''
            // resetting the question paper to default
            // resetting the diff levels options to default when new part
            // is selected
            // <a class="dropdown-item" onclick="question_paper('question_paper_2')">question_paper_2</a>
            // resetting the diff level label to default
            document.getElementById('question_paper_dropdown').innerHTML = 'question paper '
            const permissible_question_papers = document.getElementById('permissible_question_papers')
            permissible_question_papers.innerHTML = ''
            var levels = ['question_paper_1','question_paper_2','question_paper_3','question_paper_4','question_paper_5','question_paper_6']
            for (var i=0; i<levels.length; i++){
                var a= document.createElement('a')
                a.className = 'dropdown-item'
                a.setAttribute('onclick','question_paper("'+levels[i]+'")')
                a.innerHTML = levels[i]
                permissible_question_papers.appendChild(a)
            }
        }    
    }

    var editing_mode = false
    function edit_quiz(){
        // disabling change names
        document.getElementById('change_name_controls').hidden = true

        // disabling youtube
        document.getElementById('youtube_controls').hidden = true

        // enabling controls
        document.getElementById('add_quiz_controls').hidden = false

        // resetting pdf
        document.getElementById('pdf_explaination_path').innerHTML = ''

        // resetting duration
        document.getElementById('duration_input').value = ''

        // show buttons
        // document.getElementById('delete_part_of_quiz').hidden = false
        // document.getElementById('delete_topic').hidden = false

        // show the delete_the_whole_quiz button
        document.getElementById('delete_the_whole_quiz').hidden = false

        // if the user selects another topic name then
        // delete all the fetched questions
        // suppose we came from add quiz
        document.getElementById('questions_and_options').innerHTML = ''
        question_count = 0

        // resetting everything
        document.getElementById('topic_name').value = ''
        document.getElementById('part_number_input').value = ''
        document.getElementById('part_number_btn').innerHTML = 'Part Number'
        document.getElementById('question_paper_dropdown').innerHTML = 'question paper '
        document.getElementById('permissible_question_papers').innerHTML = ''
        document.getElementById('already_existing_parts').innerHTML = ''

        // disable duration
        var duration = document.getElementById('duration')
        duration.hidden = true
        // disable greeting
        greeting.hidden = true
        // disabling new option in topic name
        const new_option = document.getElementsByClassName('new_option')
        console.log(new_option)
        new_option[0].hidden = true
        new_option[1].hidden = true
        // toggling the switch
        editing_mode = true
        // resetting the label on the button for topic name
        const topic_name_btn = document.getElementById('topic_name_btn')
        topic_name_btn.innerHTML = 'Topic Name'
        // removing all the question boxes added when add quiz was clicked
        questions_and_options.innerHTML = ''
        // disabling add more question btn
        const add_more_questions_btn = document.getElementById('add_more_questions_btn')
        add_more_questions_btn.hidden = true
        // disabling the input box for topic name
        const topic_name_input = document.getElementById('topic_name')
        topic_name_input.hidden = true
        
        // disabling the part_number_input box
        const part_number_input = document.getElementById('part_number_input')
        part_number_input.hidden = true
        
        // enabling part number dropdown
        const part_number_dropdown = document.getElementById('part_number_dropdown')
        part_number_dropdown.hidden = false

        document.getElementById('selected_option').innerHTML = 'Edit Quiz'
        document.getElementById('add_quiz_controls').style.display = ''
        // document.getElementById('edit_quiz_controls').style.display = ''
        // console.log('edit')
    }

    function add_quiz(){
        // disabling change names
        document.getElementById('change_name_controls').hidden = true

        // disabling youtube
        document.getElementById('youtube_controls').hidden = true

        // enabling controls
        document.getElementById('add_quiz_controls').hidden = false

        // resetting pdf
        document.getElementById('pdf_explaination_path').innerHTML = ''

        // removing part number of comming from edit mode
        document.getElementById('part_number_input').value = ''
        // resetting duration
        document.getElementById('duration_input').value = ''

        // hide buttons
        document.getElementById('delete_part_of_quiz').hidden = true
        document.getElementById('delete_topic').hidden = true

        // hide the delete_the_whole_quiz button
        document.getElementById('delete_the_whole_quiz').hidden = true

        // if the user selects another topic name then
        // delete all the fetched questions
        // suppose we came from edit quiz
        document.getElementById('questions_and_options').innerHTML = ''
        question_count = 0

        // resetting everything
        document.getElementById('part_number_btn').innerHTML = 'Part Number'
        document.getElementById('question_paper_dropdown').innerHTML = 'question paper '
        document.getElementById('permissible_question_papers').innerHTML = ''
        document.getElementById('already_existing_parts').innerHTML = ''

        // enable duration
        var duration = document.getElementById('duration')
        duration.hidden = false
        // disable greeting
        greeting.hidden = true
        // enabling new option in topic name
        const new_option = document.getElementsByClassName('new_option')
        new_option[0].hidden = false
        new_option[1].hidden = false
        // toggling the switch
        editing_mode = false
        // resetting the label on the button for topic name
        const topic_name_btn = document.getElementById('topic_name_btn')
        topic_name_btn.innerHTML = 'Topic Name'
        // enabling add more question btn
        const add_more_questions_btn = document.getElementById('add_more_questions_btn')
        add_more_questions_btn.hidden = false
        // enabling the input box for topic name
        const topic_name_input = document.getElementById('topic_name')
        topic_name_input.value = ''
        topic_name_input.hidden = false

        // enabling the part_number_input box
        const part_number_input = document.getElementById('part_number_input')
        part_number_input.hidden = false
        
        // disabling part number dropdown
        // const part_number_dropdown = document.getElementById('part_number_dropdown')
        // part_number_dropdown.hidden = true

        document.getElementById('selected_option').innerHTML = 'Add Quiz'
        document.getElementById('add_quiz_controls').style.display = ''
        // document.getElementById('edit_quiz_controls').style.display = 'none'
        // console.log('add')
    }

    document.getElementById('title').innerText = "{{title}}"


    // ##################   YOUTUBE ###########################

    // global
    var yt_name_exists = false
    var yt_part_exists = false
    var yt_already_existing_parts_from_db = []

    const yt_part_number_input = document.getElementById('yt_part_number_input')
    const yt_topic_name = document.getElementById('yt_topic_name')
    const yt_already_existing_parts = document.getElementById('yt_already_existing_parts')
    const yt_player = document.getElementById('yt_player')
    const iframe = document.getElementById('iframe')
    const yt_link_input = document.getElementById('yt_link_input')

    // when Add YouTube Videos is clicked
    function add_youtube_links(){
        document.getElementById('add_quiz_controls').hidden = true
        document.getElementById('selected_option').innerHTML = "YouTube"
        document.getElementById('youtube_controls').hidden = false
        document.getElementById('greeting').hidden = true
        document.getElementById('change_name_controls').hidden = true
    }

    function yt_topic_name_selected(topic){
        // if a new topic is selected whether is 'new' or old
        // controls below it should be locked (ie part number)
        // and reset to default
        yt_part_number_input.readOnly = true
        yt_part_number_input.value = ''
        yt_already_existing_parts.innerHTML = ''
        yt_player.hidden = true
        yt_link_input.readOnly = true
        yt_link_input.value = ''

        // if topic_name is 'new' then unlock topic_name_input
        // so that they can enter the new name
        // else if its not 'new' then display the 
        // selected name and relock input if its unlocked
        if (topic == 'new'){
            yt_topic_name.readOnly = false
            yt_topic_name.value = ''
            yt_name_exists = false
        }
        else{
            yt_topic_name.readOnly = true
            yt_topic_name.value = topic
            yt_name_exists = true
            
            // if selected topic is not new then
            // fetch the available parts of that topic
            // and insert into yt_already_existing_parts
            // fetching parts available to the video
            postData('/yt_parts_from_db', {'yt_topic_name':topic})
            .then(data => {
                console.log(data); // JSON data parsed by `data.json()` call
                yt_already_existing_parts_from_db = data
                // <p class="dropdown-item" onclick="part_number_selected('part_1')">part_1</p>
                
                yt_already_existing_parts.innerHTML = ''
                for (var i=0; i<data.length; i++){
                    var p = document.createElement('p')
                    p.className = 'dropdown-item'
                    p.setAttribute('onclick','yt_part_number_selected("'+data[i]+'")')
                    p.innerHTML = data[i]
                    yt_already_existing_parts.appendChild(p)
                }
            });
        }
    }

    function yt_part_number_selected(part){
        // reseting controls below this to default (ie player)
        yt_player.hidden = true
        yt_link_input.readOnly = true
        yt_link_input.value = ''

        if (part == 'new'){
            // if new then unlock input box
            // and reset old selection so that user
            // can add new
            yt_part_number_input.readOnly = false
            yt_part_number_input.value = ''
            yt_link_input.readOnly = false
            yt_part_exists = false
        }
        else{
            // if not new then lock input box
            // and display selection
            yt_part_number_input.readOnly = true
            yt_part_number_input.value = part
            yt_part_exists = true

            // fetching link
            var link = ''
            postData('/yt_link_from_db', {'yt_topic_name':yt_topic_name.value,'yt_part':part})
            .then(data => {
                console.log(data); // JSON data parsed by `data.json()` call
                // fetch the link and append to player as src
                yt_link_input.readOnly = false
                yt_link_input.value = data
                yt_player.hidden = false
                iframe.src = data
            });
        }
    }

    function yt_submit(){
        // checking
        if (yt_topic_name.value == '') {
            alert("name is missing")
            return
        }

        if (yt_part_number_input.value == '') {
            alert("part is missing")
            return
        }

        if (yt_link_input.value == '') {
            alert("link is missing")
            return
        }

        var splitted = yt_link_input.value.split(' ')
        splitted = splitted[3].split('"')
        yt_link_input.value = splitted[1]

        // alert(yt_link_input.value)
        // return

        var send = {yt_topic_name:yt_topic_name.value,
        yt_part_number_input:yt_part_number_input.value,
        yt_link_input:yt_link_input.value,
        yt_name_exists:yt_name_exists,
        yt_part_exists:yt_part_exists}

        // send to back-end
        postData('/yt_add_update', send)
        .then(data => {
            console.log(data); // JSON data parsed by `data.json()` call
            if (data == 'failed') alert("process failed")
            location.reload();
        });
    }

    function yt_delete(){
        // checking
        if (yt_topic_name.value == '') {
            alert("name is missing")
            return
        }

        if (yt_part_number_input.value == '') {
            alert("part is missing")
            return
        }

        var send = {yt_topic_name:yt_topic_name.value,
        yt_part_number_input:yt_part_number_input.value}

        // send to back-end
        postData('/yt_delete', send)
        .then(data => {
            console.log(data); // JSON data parsed by `data.json()` call
            if (data == 'failed') alert("process failed")
            location.reload();
        });
    }

    // ################### CHANGE NAMES ###################

    // global
    const cn_topic_name = document.getElementById('cn_topic_name')
    const cn_new_topic_name = document.getElementById('cn_new_topic_name')
    const cn_part_number_input = document.getElementById('cn_part_number_input')
    const cn_already_existing_parts = document.getElementById('cn_already_existing_parts')
    const cn_new_part_number = document.getElementById('cn_new_part_number')
    const cn_current_question_papers = document.getElementById('cn_current_question_papers')
    const cn_new_permissible_question_papers = document.getElementById('cn_new_permissible_question_papers')
    const cn_current_question_papers_btn = document.getElementById('cn_current_question_papers_btn')
    const cn_new_question_papers_btn = document.getElementById('cn_new_question_papers_btn')

    function change_names(){
        document.getElementById('change_name_controls').hidden = false
        document.getElementById('add_quiz_controls').hidden = true
        document.getElementById('selected_option').innerHTML = "Change Names"
        document.getElementById('youtube_controls').hidden = true
        document.getElementById('greeting').hidden = true
    }

    function cn_topic_name_selected(topic){
        // resetting all controls below this
        cn_topic_name.value = topic
        cn_new_topic_name.value = ''
        cn_part_number_input.value = ''
        cn_already_existing_parts.innerHTML = ''
        cn_new_part_number.value = ''
        cn_current_question_papers.innerHTML = ''
        cn_new_permissible_question_papers.innerHTML = ''
        cn_current_question_papers_btn.innerHTML = 'question paper '
        cn_new_question_papers_btn.innerHTML = 'new question paper '

        // fetching parts available to the quiz
        postData('/parts_from_db', {selected_topic_name:topic})
        .then(data => {
            console.log(data); // JSON data parsed by `data.json()` call
            already_existing_parts_from_db = data
            // console.log("asdasdasd")
            // <p class="dropdown-item" onclick="part_number_selected('part_1')">part_1</p>
            // cn_already_existing_parts = document.getElementById('cn_already_existing_parts')
            cn_already_existing_parts.innerHTML = ''
            for (var i=0; i<data.length; i++){
                // console.log("asdasdasd")
                var p = document.createElement('p')
                p.className = 'dropdown-item'
                p.setAttribute('onclick','cn_part_number_selected("'+data[i]+'")')
                p.innerHTML = data[i]
                cn_already_existing_parts.appendChild(p)
            }
        });
    }

    var cn_already_existing_questions_papers_in_db = []
    function cn_part_number_selected(part) {
        // resetting all below it
        cn_part_number_input.value = part
        cn_new_part_number.value = ''
        cn_current_question_papers.innerHTML = ''
        cn_new_permissible_question_papers.innerHTML = ''
        cn_current_question_papers_btn.innerHTML = 'question paper '
        cn_new_question_papers_btn.innerHTML = 'new question paper '
        // alert("asd")

        // fetching different question papers
        // available in db
        postData('/get_question_paper/edit', {"part_number":'part_'+part,"topic_name":cn_topic_name.value})
        .then(data => {
            // console.log("here"+data); // JSON data parsed by `data.json()` call
            // const permissible_question_papers = document.getElementById('permissible_question_papers')
            if (data == null) {
                cn_current_question_papers.innerHTML = ''
                alert("You have already added all question papers for this configuration")
            }
            else{
                cn_already_existing_questions_papers_in_db = data
                // <a class="dropdown-item" onclick="question_paper('question_paper_1')">question_paper_1</a>
                cn_current_question_papers.innerHTML = ''
                for (var i=0; i<data.length; i++){
                    var a = document.createElement('a')
                    a.className = 'dropdown-item'
                    // const current_ = 'current'
                    a.setAttribute('onclick','cn_question_paper("'+data[i]+'","'+'current'+'")')
                    a.innerHTML = data[i]
                    cn_current_question_papers.appendChild(a)
                }
            }
        });
        // permissible
        var data = ['question_paper_1','question_paper_2','question_paper_3','question_paper_4','question_paper_5','question_paper_6']
        cn_new_permissible_question_papers.innerHTML = ''
        for (var i=0; i<data.length; i++){
            var a = document.createElement('a')
            a.className = 'dropdown-item'
            // const current_ = 'current'
            a.setAttribute('onclick','cn_question_paper("'+data[i]+'","'+'new'+'")')
            a.innerHTML = data[i]
            cn_new_permissible_question_papers.appendChild(a)
        }
    }

    function cn_question_paper(question_paper,c_or_n){
        // if current box option is clicked then display
        // it in current btn
        if (c_or_n == 'current'){
            cn_current_question_papers_btn.innerHTML = question_paper
        }
        // else display it in new box btn
        else{
            cn_new_question_papers_btn.innerHTML = question_paper
        }
    }

    function cn_submit(){
        // validations / checking
        // if all the three boxes are empty then notify it
        if (cn_topic_name.value == '' || cn_part_number_input.value == '' || cn_current_question_papers_btn.innerText == 'question paper '
        || cn_new_topic_name.value == '' || cn_new_part_number.value == '' || cn_new_question_papers_btn.innerHTML == 'new question paper '){
            alert('Please fill everything')
            return
        }

        // the logic here is like this : even if the user has to only change
        // the question paper, still they have to provide the new topic name
        // and new part number which can be same as the old one.

        // but if the given part number or topic name is not equal to the 
        // old one then that parameters will also be aken into consideration
        // for changing.
        var data_to_send = {}
        var change_required = false
        // ########## NAME ########################
        // if new name is same as old name
        // then it will not be changed
        if (cn_topic_name.value == cn_new_topic_name.value){
            data_to_send['changes_in_name'] = false
        }
        // if they are not same then check whether it already exists or not
        else{
            // if the new name already exists then alert and return
            if (topics_in_db.includes(cn_new_topic_name.value)){
                alert('this name already exists. Try some other name')
                return
            }
            // if its an entirely new name
            else{
                data_to_send['changes_in_name'] = true
                data_to_send['old_topic_name'] = cn_topic_name.value
                data_to_send['new_topic_name'] = cn_new_topic_name.value
                change_required = true
            }
        }

        // ########## PART NUMBER ########################
        // if new and old part number is same 
        if (cn_part_number_input.value == cn_new_part_number.value){
            data_to_send['changes_in_part'] = false
        }
        else{
            // if the new part number already exists then alert and return
            if (already_existing_parts_from_db.includes(cn_new_part_number.value)){
                alert('the entered part number already exists for this quiz. Try some other number')
                return
            }
            // if its an entirely new part number
            else{
                data_to_send['changes_in_part'] = true
                data_to_send['old_topic_name'] = cn_topic_name.value
                // data_to_send['new_topic_name'] = cn_new_topic_name.value
                data_to_send['old_part_number'] = 'part_'+cn_part_number_input.value
                data_to_send['new_part_number'] = 'part_'+cn_new_part_number.value
                change_required = true
            }
        }

        // ########## QUESTION PAPER ########################
        // if new and old question papers are the same
        if (cn_current_question_papers_btn.innerHTML == cn_new_question_papers_btn.innerHTML){
            data_to_send['changes_in_question_paper'] = false
        }
        else{
            // if the new question paper already exists then alert and return
            if (cn_already_existing_questions_papers_in_db.includes(cn_new_question_papers_btn.innerHTML)){
                alert('this question paper already exists for this quiz. Try some other question paper')
                return
            }
            else{
                data_to_send['changes_in_question_paper'] = true
                data_to_send['old_topic_name'] = cn_topic_name.value
                // data_to_send['new_topic_name'] = cn_new_topic_name.value
                data_to_send['old_part_number'] = 'part_'+cn_part_number_input.value
                // data_to_send['new_part_number'] = cn_new_part_number.value
                data_to_send['old_question_paper'] = cn_current_question_papers_btn.innerHTML
                data_to_send['new_question_paper'] = cn_new_question_papers_btn.innerHTML
                change_required = true
            }
        }

        if (change_required){
            // if all that is okay
            postData('/change_names', data_to_send)
            .then(data => {
                // console.log("here"+data); // JSON data parsed by `data.json()` call
                // const permissible_question_papers = document.getElementById('permissible_question_papers')
                if (data == 'failed') {
                    alert("something went wrong")
                    return
                }
                // if everything went fine
                location.reload();
            });
        }
        else{
            alert("no changes specified")
            return
        }
    }

    // ############## YouTube Change Names ###################
    // global
    const cn_yt_topic_name = document.getElementById('cn_yt_topic_name')
    const cn_yt_part_number_input = document.getElementById('cn_yt_part_number_input')
    const cn_yt_new_topic_name = document.getElementById('cn_yt_new_topic_name')
    const cn_yt_new_part_number = document.getElementById('cn_yt_new_part_number')

    function cn_yt_topic_name_selected(name){
        // resetting every controls below this
        cn_yt_part_number_input.value = ''
        cn_yt_new_topic_name.value = ''
        cn_yt_new_part_number.value = ''

        cn_yt_topic_name.value = name

        // fetching parts available to the topic
        postData('/yt_parts_from_db', {'yt_topic_name':name})
        .then(data => {
            console.log(data); // JSON data parsed by `data.json()` call
            yt_already_existing_parts_from_db = data
            // console.log("asdasdasd")
            // <p class="dropdown-item" onclick="part_number_selected('part_1')">part_1</p>
            // cn_already_existing_parts = document.getElementById('cn_already_existing_parts')
            cn_yt_already_existing_parts.innerHTML = ''
            for (var i=0; i<data.length; i++){
                // console.log("asdasdasd")
                var p = document.createElement('p')
                p.className = 'dropdown-item'
                p.setAttribute('onclick','cn_yt_part_number_selected("'+data[i]+'")')
                p.innerHTML = data[i]
                cn_yt_already_existing_parts.appendChild(p)
            }
        });
    }
    
    function cn_yt_part_number_selected(part){
        // resetting every control below this
        cn_yt_new_part_number.value = ''

        cn_yt_part_number_input.value = part
    }

    function cn_yt_submit(){
        // validations / checking
        // if all the three boxes are empty then notify it
        if (cn_yt_topic_name.value == '' || cn_yt_part_number_input.value == '' 
        || cn_yt_new_topic_name.value == '' || cn_yt_new_part_number.value == ''){
            alert('Please fill everything')
            return
        }

        // the logic here is like this : even if the user has to only change
        // the question paper, still they have to provide the new topic name
        // and new part number which can be same as the old one.

        // but if the given part number or topic name is not equal to the 
        // old one then that parameters will also be aken into consideration
        // for changing.
        var data_to_send = {}
        var change_required = false
        // ########## NAME ########################
        // if new name is same as old name
        // then it will not be changed
        if (cn_yt_topic_name.value == cn_yt_new_topic_name.value){
            data_to_send['changes_in_name'] = false
        }
        // if they are not same then check whether it already exists or not
        else{
            // if the new name already exists then alert and return
            if (yt_topics.includes(cn_yt_new_topic_name.value)){
                alert('this name already exists. Try some other name')
                return
            }
            // if its an entirely new name
            else{
                data_to_send['changes_in_name'] = true
                data_to_send['old_topic_name'] = cn_yt_topic_name.value
                data_to_send['new_topic_name'] = cn_yt_new_topic_name.value
                change_required = true
            }
        }

        // ########## PART NUMBER ########################
        // if new and old part number is same 
        if (cn_yt_part_number_input.value == cn_yt_new_part_number.value){
            data_to_send['changes_in_part'] = false
        }
        else{
            // if the new part number already exists then alert and return
            if (yt_already_existing_parts_from_db.includes(cn_yt_new_part_number.value)){
                alert('the entered part number already exists for this quiz. Try some other number')
                return
            }
            // if its an entirely new part number
            else{
                data_to_send['changes_in_part'] = true
                data_to_send['old_topic_name'] = cn_yt_topic_name.value
                // data_to_send['new_topic_name'] = cn_yt_new_topic_name.value
                data_to_send['old_part_number'] = 'part_'+cn_yt_part_number_input.value
                data_to_send['new_part_number'] = 'part_'+cn_yt_new_part_number.value
                change_required = true
            }
        }

        if (change_required){
            // if all that is okay
            postData('/yt_change_names', data_to_send)
            .then(data => {
                // console.log("here"+data); // JSON data parsed by `data.json()` call
                // const permissible_question_papers = document.getElementById('permissible_question_papers')
                if (data == 'failed') {
                    alert("something went wrong")
                    return
                }
                // if everything went fine
                location.reload();
            });
        }
        else{
            alert('no change specified')
            return
        }

    }

</script>